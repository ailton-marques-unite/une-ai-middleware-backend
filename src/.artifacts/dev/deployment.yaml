apiVersion: apps/v1
kind: Deployment
metadata:
  name: une-ai-api
  namespace: #{namespace}#
  annotations:
    azure-devops/commit-id: "#{Build.SourceVersion}#"
    azure-devops/build-id: "#{Build.BuildId}#"
    azure-devops/pipeline-name: "#{Build.DefinitionName}#"
    azure-devops/build-date: "#{Build.BuildNumber}#"
spec: 
  replicas: #{minReplicas}#
  selector:
    matchLabels:
      app: une-ai-api
  template:
    metadata:
      labels:
        app: une-ai-api
    spec:
      imagePullSecrets:
      - name: acrunebrs01
      containers:
      - name: une-ai-api
        image: acrunebrs01.azurecr.io/une-ai-api-#{env}#:#{env}#-#{Build.BuildId}#
        ports:
        - name: web
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            memory: "#{memoryRequest}#"
            cpu: "#{cpuRequest}#"
          limits:
            memory: "#{memoryLimit}#"
            cpu: "#{cpuLimit}#"
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3        
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: une-ai-api-service
  namespace: #{namespace}#
spec:
  selector:
    app: une-ai-api
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dev
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  name: une-ai-api
  namespace: une-dev
spec:
  ingressClassName: nginx
  rules:
  - host: #{host}#
    http:
      paths:
      - backend:
          service:
            name: une-ai-api-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - #{host}#
    secretName: une-ai-api-tls